[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Initialize autosort and force first hand of run to be sorted
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "function Game:start_run(args)"
position = "after"
payload = '''
force_sort = true
sort_button_bool = updateAutosortDefault()
nullifySort()
'''
match_indent = true

# Disable forced sorting when first hand of run is played or discarded
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.FUNCS.play_cards_from_highlighted = function(e)"
position = "after"
payload = '''
force_sort = false
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.FUNCS.discard_cards_from_highlighted = function(e, hook)"
position = "after"
payload = '''
force_sort = false
'''
match_indent = true

#update draw funtion to use autosort and forced sorting
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "self.config.sort = config.sort or 'desc'"
position = "at"
payload = '''
self.config.sort = config.sort or default_sort
'''
match_indent = true

# NO SORTING (for the Auto button)
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "sort = sort or false"
position = "at"
payload = '''
if G.STATE == G.STATES.TAROT_PACK or G.STATE == G.STATES.SPECTRAL_PACK or force_sort then
	sort = sort or false
else
	sort = sort_button_bool or false
end
'''
match_indent = true

# SUIT SORTING
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "G.hand:sort('suit desc')"
position = "at"
payload = '''
sort_ascending = asc_bool
if sort_ascending_suit == nil then
	G.hand:sort('suit '..opp_order)
	sort_ascending_suit = asc_bool
elseif not sort_ascending_suit then
	G.hand:sort('suit desc')
	sort_ascending_suit = true
else
	G.hand:sort('suit asc')
	sort_ascending_suit = false
end
'''
match_indent = true

# RANK SORTING
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "G.hand:sort('desc')"
position = "at"
payload = '''
sort_ascending_suit = asc_bool
if sort_ascending == nil then
	G.hand:sort(opp_order)
	sort_ascending = asc_bool
elseif not sort_ascending then
	G.hand:sort('desc')
	sort_ascending = true
else
	G.hand:sort('asc')
	sort_ascending = false
end
'''
match_indent = true